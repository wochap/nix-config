## Theme

set -g pane-border-lines single
set -g popup-border-lines rounded

set -g @catppuccin_status_default "off"
set -g @catppuccin_status_background 'default'
set -g status off

run-shell ~/.config/tmux/plugins/catppuccin/catppuccin.tmux
run-shell ~/.config/tmux/plugins/status-bar/status-bar.tmux

# show status bar only if there's more than 1 window
set-hook -g after-new-window 'if "[ #{session_windows} -gt 1 ]" "set status on"'
set-hook -g after-kill-pane 'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g pane-exited 'if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colors


## General

# forward modified keys
set -g xterm-keys on
setw -g extended-keys on

set -s focus-events on
set -s escape-time 0
# set -g set-titles on
# set -g set-titles-string "#{pane_title}"

run-shell ~/.config/tmux/plugins/sensible/sensible.tmux

# https://github.com/3rd/image.nvim
set -gq allow-passthrough on

# Allows to start empty sessions
set-option -g exit-empty off

# True color settings
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

# NOTE: in tmux, sixel only works on files < 1mb
# source: https://github.com/tmux/tmux/issues/3726

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

set -g mouse on

setw -g clock-mode-style 24

setw -g mode-keys vi

set -g prefix C-S-b

set -g main-pane-width "50%"
set -g main-pane-height "50%"
set-hook -g -a after-new-window "select-layout main-horizontal"
set-hook -g window-linked "select-layout main-horizontal \; run-shell 'tmux-kill-unattached-sessions --silent'"


## Keybindings

pane_is_vim_like="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# Fix home/end keys
# source https://stackoverflow.com/questions/18600188/home-end-keys-do-not-work-in-tmux#answer-55616731
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# reload config
bind -n C-S-f5 source-file ~/.config/tmux/tmux.conf

# clear terminal to cursor
bind -n C-S-k send-keys C-k \; send-keys -R \; send-keys -R \; clear-history

# sync keypresses in all panes in a window
bind-key -T LEADER y set-window-option synchronize-panes on
bind-key -T LEADER Y set-window-option synchronize-panes off

# scrolling
bind -n C-S-PPage if-shell "$pane_is_vim_like" "send-keys C-S-PPage" "copy-mode \; send-keys -X page-up"
bind -n C-S-NPage if-shell "$pane_is_vim_like" "send-keys C-S-NPage" "copy-mode \; send-keys -X page-down"
bind -n C-S-u if-shell "$pane_is_vim_like" "send-keys C-S-u" "copy-mode \; send-keys -X page-up"
bind -n C-S-d if-shell "$pane_is_vim_like" "send-keys C-S-d" "copy-mode \; send-keys -X page-down"
bind -n C-S-Home if-shell "$pane_is_vim_like" "send-keys C-S-Home" "copy-mode \; send-keys -X history-top"
bind -n C-S-End if-shell "$pane_is_vim_like" "send-keys C-S-End" "copy-mode \; send-keys -X history-bottom"

# panes
bind-key -n C-Left if -F "#{@pane-is-vim}" 'send-keys C-Left' 'select-pane -L'
bind-key -n C-Down if -F "#{@pane-is-vim}" 'send-keys C-Down' 'select-pane -D'
bind-key -n C-Up if -F "#{@pane-is-vim}" 'send-keys C-Up' 'select-pane -U'
bind-key -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Right' 'select-pane -R'

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R

bind-key -n C-S-Left if -F "#{@pane-is-vim}" 'send-keys C-S-Left' 'swap-pane -d -t "{left-of}"'
bind-key -n C-S-Down if -F "#{@pane-is-vim}" 'send-keys C-S-Down' 'swap-pane -d -t "{down-of}"'
bind-key -n C-S-Up if -F "#{@pane-is-vim}" 'send-keys C-S-Up' 'swap-pane -d -t "{up-of}"'
bind-key -n C-S-Right if -F "#{@pane-is-vim}" 'send-keys C-S-Right' 'swap-pane -d -t "{right-of}"'

bind-key -n C-S-M-Left if -F "#{@pane-is-vim}" 'send-keys C-S-M-Left' 'resize-pane -L 4'
bind-key -n C-S-M-Down if -F "#{@pane-is-vim}" 'send-keys C-S-M-Down' 'resize-pane -D 4'
bind-key -n C-S-M-Up if -F "#{@pane-is-vim}" 'send-keys C-S-M-Up' 'resize-pane -U 4'
bind-key -n C-S-M-Right if -F "#{@pane-is-vim}" 'send-keys C-S-M-Right' 'resize-pane -R 4'

bind -n C-f4 if-shell "$pane_is_vim_like" "send-keys C-f4" 'display-panes -d 0'
bind -n C-S-f4 if-shell "$pane_is_vim_like" "send-keys C-S-f4" 'display-panes -d 0 "swap-pane -d -t %%"'

bind -n C-n if-shell "$pane_is_vim_like" "send-keys C-n" 'select-pane -Z -t "{next}"'
bind -n C-p if-shell "$pane_is_vim_like" "send-keys C-p" 'select-pane -Z -t "{previous}"'
bind -n C-S-n if-shell "$pane_is_vim_like" "send-keys C-S-n" 'swap-pane -d -t "{next}"'
bind -n C-S-p if-shell "$pane_is_vim_like" "send-keys C-S-p" 'swap-pane -d -t "{previous}"'
bind -n C-Enter swap-pane -d -t "{top-left}"
bind -n C-S-Enter split-window -v -c "#{pane_current_path}" \; select-layout
bind -n C-S-M-Enter break-pane -a
bind -n C-S-w kill-pane \; select-layout

bind -T LEADER s display-popup -w 90% -h 90% -E "tmux list-panes -F '#{pane_id} #{session_name}:#{window_index}  #{pane_current_command}  #{pane_current_path}' | fzf --preview 'tmux capture-pane -p -e -t {1}' --preview-window=bottom,50%,nowrap,border-top | cut -d' ' -f1 | xargs -I {} tmux select-pane -t {}"

# windows
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t -1

bind -n C-S-q if-shell '[ "$(tmux display-message -p "#{window_panes}")" -gt 1 ]' 'confirm-before kill-window' 'kill-window'
bind -n C-, select-window -p
bind -n C-. select-window -n
bind -n C-S-< swap-window -d -t "{previous}"
bind -n C-S-> swap-window -d -t "{next}"
bind -n C-S-t new-window -a -c "#{pane_current_path}"
# bind -n C-S-M-t # TODO: detach window

# sessions
bind -n C-M-S-q kill-session

# layouts
bind -n C-S-f resize-pane -Z
bind -n C-S-r switch-client -T LAYOUT
bind -T LAYOUT m resize-pane -Z
bind -T LAYOUT t select-layou main-vertical
bind -T LAYOUT f select-layou main-horizontal
bind -T LAYOUT s select-layou tiled


## tmux-yank

set -g @yank_with_mouse off
set -g @yank_selection 'primary'
set -g @copy_mode_put 'p'
set -g @copy_mode_yank_put 'C-y'
set -g @yank_line ''
set -g @yank_pane_pwd ''

bind -n C-S-l switch-client -T LEADER
bind -T LEADER v copy-mode

# don't copy on mouse selection end
unbind -T copy-mode-vi MouseDragEnd1Pane

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'clipcopy'
bind -T copy-mode-vi Y send-keys -X copy-pipe-end-of-line-and-cancel 'clipcopy'
bind -T copy-mode-vi M-y send-keys -X copy-pipe-line-and-cancel 'clipcopy'
bind -T copy-mode-vi c send-keys -X copy-pipe 'clipcopy'
bind -T copy-mode-vi C send-keys -X copy-pipe-end-of-line 'clipcopy'

run-shell ~/.config/tmux/plugins/yank/yank.tmux


## tmux-resurrect

# set -g @resurrect-capture-pane-contents 'on'

# run-shell ~/.config/tmux/plugins/resurrect/resurrect.tmux


## tmux-continuum

# set -g @continuum-restore 'on'

# run-shell ~/.config/tmux/plugins/continuum/continuum.tmux


## tmux-sessionx

set -g @sessionx-x-path ''
set -g @sessionx-filter-current 'false'
set -g @sessionx-custom-paths ''
set -g @sessionx-preview-ratio '50%'
set -g @sessionx-preview-location 'bottom,border-top'
set -g @sessionx-window-height '90%'
set -g @sessionx-window-width '90%'
set -g @sessionx-prompt " "
set -g @sessionx-pointer "❯ "
set -g @sessionx-zoxide-mode 'off'
set -g @sessionx-tmuxinator-mode 'on'
set -g @sessionx-additional-options "${FZF_DEFAULT_OPTS}"
set -g @sessionx-legacy-fzf-support 'on' # remove labels

bind -T LEADER S run-shell ~/.config/tmux/plugins/tmux-sessionx/scripts/sessionx.sh

run-shell ~/.config/tmux/plugins/tmux-sessionx/sessionx.tmux

